// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ApplicationUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public partial class UIMap
    {
        
        /// <summary>
        /// BrowseSaveXML - Use 'BrowseSaveXMLParams' to pass parameters into this method.
        /// </summary>
        public void BrowseSaveXML()
        {
            #region Variable Declarations
            WpfButton uIBrowseXMLButton = this.UIScrollerDevelopementWindow.UIBrowseXMLButton;
            WinEdit uINameEdit = this.UIOpenWindow.UIItemWindow.UIPlayerxmlListItem.UINameEdit;
            WinButton uIOpenButton = this.UIOpenWindow.UIOpenWindow1.UIOpenButton;
            WpfTabPage uIMovementComponentTabPage = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage;
            WpfSlider uIItemSlider = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIMoveSpeed2327172Text.UIItemSlider;
            WpfSlider uIItemSlider1 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIMoveAcceleration1106Text.UIItemSlider;
            WpfSlider uIItemSlider2 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIJumpSpeed4318531Text.UIItemSlider;
            WpfButton uISaveXMLButton = this.UIScrollerDevelopementWindow.UISaveXMLButton;
            WinComboBox uIFilenameComboBox = this.UISaveAsWindow.UIDetailsPanePane.UIFilenameComboBox;
            WinButton uISaveButton = this.UISaveAsWindow.UISaveWindow.UISaveButton;
            WinEdit uINameEdit1 = this.UIOpenWindow.UIItemWindow.UITestEntityxmlListItem.UINameEdit;
            WpfTabPage uIMovementComponentTabPage1 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1;
            WpfSlider uIItemSlider3 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveSpeed9499927Text.UIItemSlider;
            WpfSlider uIItemSlider4 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveAcceleration1736Text.UIItemSlider;
            WpfSlider uIItemSlider5 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIJumpSpeed2493841Text.UIItemSlider;
            #endregion

            // Click 'Browse XML' button
            Mouse.Click(uIBrowseXMLButton, new Point(46, 24));

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(24, 21));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(25, 18));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage, new Point(46, 24));

            // Set position '94.46' in first slider next to 'MoveSpeed: 232.7172' label
            uIItemSlider.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString;

            // Set position '1651.32' in first slider next to 'MoveAcceleration: 1106.337' label
            uIItemSlider1.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString1;

            // Set position '250.38' in first slider next to 'JumpSpeed: 431.8531' label
            uIItemSlider2.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString2;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(84, 25));

            // Select 'TestEntity.xml' in 'File name:' combo box
            uIFilenameComboBox.EditableItem = this.BrowseSaveXMLParams.UIFilenameComboBoxEditableItem;

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(69, 25));

            // Click 'Browse XML' button
            Mouse.Click(uIBrowseXMLButton, new Point(83, 29));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit1, new Point(69, 20));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage1, new Point(133, 18));

            // Set position '165.3' in first slider next to 'MoveSpeed: 94.99927' label
            uIItemSlider3.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString3;

            // Set position '2889.81' in first slider next to 'MoveAcceleration: 1736.938' label
            uIItemSlider4.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString4;

            // Set position '438.17' in first slider next to 'JumpSpeed: 249.3841' label
            uIItemSlider5.PositionAsString = this.BrowseSaveXMLParams.UIItemSliderPositionAsString5;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(60, 22));

            // Select 'TestEntity2.xml' in 'File name:' combo box
            uIFilenameComboBox.EditableItem = this.BrowseSaveXMLParams.UIFilenameComboBoxEditableItem1;

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(58, 23));
        }
        
        /// <summary>
        /// BrowseSaveXML2 - Use 'BrowseSaveXML2Params' to pass parameters into this method.
        /// </summary>
        public void BrowseSaveXML2()
        {
            #region Variable Declarations
            WpfButton uIBrowseXMLButton = this.UIScrollerDevelopementWindow.UIBrowseXMLButton;
            WinEdit uINameEdit = this.UIOpenWindow.UIItemWindow.UIPlayerxmlListItem.UINameEdit;
            WinButton uIOpenButton = this.UIOpenWindow.UIOpenWindow1.UIOpenButton;
            WpfTabPage uIMovementComponentTabPage = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage;
            WpfSlider uIItemSlider = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIMoveSpeed2327172Text.UIItemSlider;
            WpfSlider uIItemSlider1 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIMoveAcceleration1106Text.UIItemSlider;
            WpfSlider uIItemSlider2 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIJumpSpeed4318531Text.UIItemSlider;
            WpfButton uISaveXMLButton = this.UIScrollerDevelopementWindow.UISaveXMLButton;
            WinComboBox uIFilenameComboBox = this.UISaveAsWindow.UIDetailsPanePane.UIFilenameComboBox;
            WinButton uISaveButton = this.UISaveAsWindow.UISaveWindow.UISaveButton;
            WinEdit uINameEdit1 = this.UIOpenWindow.UIItemWindow.UITestEntityxmlListItem.UINameEdit;
            WpfTabPage uIMovementComponentTabPage1 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1;
            WpfSlider uIItemSlider3 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveSpeed9499927Text.UIItemSlider;
            WpfSlider uIItemSlider4 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveAcceleration1736Text.UIItemSlider;
            WpfSlider uIItemSlider5 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIJumpSpeed2493841Text.UIItemSlider;
            WpfEdit uIPlayerEntityBrowseFiEdit = this.UIScrollerDevelopementWindow.UIPlayerEntityBrowseFiEdit;
            WpfSlider uIItemSlider6 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIMoveSpeed250Text.UIItemSlider;
            WpfSlider uIItemSlider7 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage.UIJumpSpeed4474076Text.UIItemSlider;
            WinEdit uIFilenameEdit = this.UISaveAsWindow.UIItemWindow.UIFilenameEdit;
            WinEdit uINameEdit2 = this.UISaveAsWindow.UIItemWindow1.UITestEntityxmlListItem.UINameEdit;
            WinButton uIYesButton = this.UISaveAsWindow3.UIYesWindow.UIYesButton;
            WpfSlider uIItemSlider8 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveSpeed6826093Text.UIItemSlider;
            WpfSlider uIItemSlider9 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIMoveAcceleration3225Text.UIItemSlider;
            WpfSlider uIItemSlider10 = this.UIScrollerDevelopementWindow.UITCcompTabList.UIMovementComponentTabPage1.UIJumpSpeed1131481Text.UIItemSlider;
            WinEdit uINameEdit3 = this.UISaveAsWindow.UIItemWindow2.UITestEntity2xmlListItem.UINameEdit;
            #endregion

            // Click 'Browse XML' button
            Mouse.Click(uIBrowseXMLButton, new Point(46, 24));

            // Click 'Name' text box
            Mouse.Click(uINameEdit, new Point(24, 21));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(25, 18));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage, new Point(46, 24));

            // Set position '94.46' in first slider next to 'MoveSpeed: 232.7172' label
            uIItemSlider.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString;

            // Set position '1651.32' in first slider next to 'MoveAcceleration: 1106.337' label
            uIItemSlider1.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString1;

            // Set position '250.38' in first slider next to 'JumpSpeed: 431.8531' label
            uIItemSlider2.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString2;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(84, 25));

            // Select 'TestEntity.xml' in 'File name:' combo box
            uIFilenameComboBox.EditableItem = this.BrowseSaveXML2Params.UIFilenameComboBoxEditableItem;

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(69, 25));

            // Click 'Browse XML' button
            Mouse.Click(uIBrowseXMLButton, new Point(83, 29));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit1, new Point(69, 20));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage1, new Point(133, 18));

            // Set position '165.3' in first slider next to 'MoveSpeed: 94.99927' label
            uIItemSlider3.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString3;

            // Set position '2889.81' in first slider next to 'MoveAcceleration: 1736.938' label
            uIItemSlider4.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString4;

            // Set position '438.17' in first slider next to 'JumpSpeed: 249.3841' label
            uIItemSlider5.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString5;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(60, 22));

            // Select 'TestEntity2.xml' in 'File name:' combo box
            uIFilenameComboBox.EditableItem = this.BrowseSaveXML2Params.UIFilenameComboBoxEditableItem1;

            // Click '&Save' button
            Mouse.Click(uISaveButton, new Point(58, 23));

            // Click 'PlayerEntityBrowseFileTextBox' text box
            Mouse.Click(uIPlayerEntityBrowseFiEdit, new Point(56, 12));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage, new Point(107, -69));

            // Set position '93.46' in first slider next to 'MoveSpeed: 250' label
            uIItemSlider6.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString6;

            // Set position '275' in first slider next to 'MoveAcceleration: 1106.337' label
            uIItemSlider1.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString7;

            // Set position '62.5' in first slider next to 'MoveSpeed: 250' label
            uIItemSlider6.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString8;

            // Set position '112.5' in first slider next to 'JumpSpeed: 447.4076' label
            uIItemSlider7.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString9;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(21, 19));

            // Click 'File name:' text box
            Mouse.Click(uIFilenameEdit, new Point(39, 14));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit2, new Point(237, 12));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(22, 15));

            // Click 'Browse XML' button
            Mouse.Click(uIBrowseXMLButton, new Point(58, 11));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit1, new Point(250, 19));

            // Click 'MovementComponent' tab
            Mouse.Click(uIMovementComponentTabPage1, new Point(82, -82));

            // Set position '109.38' in first slider next to 'MoveSpeed: 68.26093' label
            uIItemSlider8.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString10;

            // Set position '481.25' in first slider next to 'MoveAcceleration: 322.5276' label
            uIItemSlider9.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString11;

            // Set position '196.88' in first slider next to 'JumpSpeed: 113.1481' label
            uIItemSlider10.PositionAsString = this.BrowseSaveXML2Params.UIItemSliderPositionAsString12;

            // Click 'Save XML' button
            Mouse.Click(uISaveXMLButton, new Point(25, 12));

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit3, new Point(377, 21));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(56, 2));
        }
        
        #region Properties
        public virtual BrowseSaveXMLParams BrowseSaveXMLParams
        {
            get
            {
                if ((this.mBrowseSaveXMLParams == null))
                {
                    this.mBrowseSaveXMLParams = new BrowseSaveXMLParams();
                }
                return this.mBrowseSaveXMLParams;
            }
        }
        
        public virtual BrowseSaveXML2Params BrowseSaveXML2Params
        {
            get
            {
                if ((this.mBrowseSaveXML2Params == null))
                {
                    this.mBrowseSaveXML2Params = new BrowseSaveXML2Params();
                }
                return this.mBrowseSaveXML2Params;
            }
        }
        
        public UIScrollerDevelopementWindow UIScrollerDevelopementWindow
        {
            get
            {
                if ((this.mUIScrollerDevelopementWindow == null))
                {
                    this.mUIScrollerDevelopementWindow = new UIScrollerDevelopementWindow();
                }
                return this.mUIScrollerDevelopementWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow();
                }
                return this.mUIOpenWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UISaveAsWindow3 UISaveAsWindow3
        {
            get
            {
                if ((this.mUISaveAsWindow3 == null))
                {
                    this.mUISaveAsWindow3 = new UISaveAsWindow3();
                }
                return this.mUISaveAsWindow3;
            }
        }
        #endregion
        
        #region Fields
        private BrowseSaveXMLParams mBrowseSaveXMLParams;
        
        private BrowseSaveXML2Params mBrowseSaveXML2Params;
        
        private UIScrollerDevelopementWindow mUIScrollerDevelopementWindow;
        
        private UIOpenWindow mUIOpenWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UISaveAsWindow3 mUISaveAsWindow3;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BrowseSaveXML'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class BrowseSaveXMLParams
    {
        
        #region Fields
        /// <summary>
        /// Set position '94.46' in first slider next to 'MoveSpeed: 232.7172' label
        /// </summary>
        public string UIItemSliderPositionAsString = "94.46";
        
        /// <summary>
        /// Set position '1651.32' in first slider next to 'MoveAcceleration: 1106.337' label
        /// </summary>
        public string UIItemSliderPositionAsString1 = "1651.32";
        
        /// <summary>
        /// Set position '250.38' in first slider next to 'JumpSpeed: 431.8531' label
        /// </summary>
        public string UIItemSliderPositionAsString2 = "250.38";
        
        /// <summary>
        /// Select 'TestEntity.xml' in 'File name:' combo box
        /// </summary>
        public string UIFilenameComboBoxEditableItem = "TestEntity.xml";
        
        /// <summary>
        /// Set position '165.3' in first slider next to 'MoveSpeed: 94.99927' label
        /// </summary>
        public string UIItemSliderPositionAsString3 = "165.3";
        
        /// <summary>
        /// Set position '2889.81' in first slider next to 'MoveAcceleration: 1736.938' label
        /// </summary>
        public string UIItemSliderPositionAsString4 = "2889.81";
        
        /// <summary>
        /// Set position '438.17' in first slider next to 'JumpSpeed: 249.3841' label
        /// </summary>
        public string UIItemSliderPositionAsString5 = "438.17";
        
        /// <summary>
        /// Select 'TestEntity2.xml' in 'File name:' combo box
        /// </summary>
        public string UIFilenameComboBoxEditableItem1 = "TestEntity2.xml";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BrowseSaveXML2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class BrowseSaveXML2Params
    {
        
        #region Fields
        /// <summary>
        /// Set position '94.46' in first slider next to 'MoveSpeed: 232.7172' label
        /// </summary>
        public string UIItemSliderPositionAsString = "94.46";
        
        /// <summary>
        /// Set position '1651.32' in first slider next to 'MoveAcceleration: 1106.337' label
        /// </summary>
        public string UIItemSliderPositionAsString1 = "1651.32";
        
        /// <summary>
        /// Set position '250.38' in first slider next to 'JumpSpeed: 431.8531' label
        /// </summary>
        public string UIItemSliderPositionAsString2 = "250.38";
        
        /// <summary>
        /// Select 'TestEntity.xml' in 'File name:' combo box
        /// </summary>
        public string UIFilenameComboBoxEditableItem = "TestEntity.xml";
        
        /// <summary>
        /// Set position '165.3' in first slider next to 'MoveSpeed: 94.99927' label
        /// </summary>
        public string UIItemSliderPositionAsString3 = "165.3";
        
        /// <summary>
        /// Set position '2889.81' in first slider next to 'MoveAcceleration: 1736.938' label
        /// </summary>
        public string UIItemSliderPositionAsString4 = "2889.81";
        
        /// <summary>
        /// Set position '438.17' in first slider next to 'JumpSpeed: 249.3841' label
        /// </summary>
        public string UIItemSliderPositionAsString5 = "438.17";
        
        /// <summary>
        /// Select 'TestEntity2.xml' in 'File name:' combo box
        /// </summary>
        public string UIFilenameComboBoxEditableItem1 = "TestEntity2.xml";
        
        /// <summary>
        /// Set position '93.46' in first slider next to 'MoveSpeed: 250' label
        /// </summary>
        public string UIItemSliderPositionAsString6 = "93.46";
        
        /// <summary>
        /// Set position '275' in first slider next to 'MoveAcceleration: 1106.337' label
        /// </summary>
        public string UIItemSliderPositionAsString7 = "275";
        
        /// <summary>
        /// Set position '62.5' in first slider next to 'MoveSpeed: 250' label
        /// </summary>
        public string UIItemSliderPositionAsString8 = "62.5";
        
        /// <summary>
        /// Set position '112.5' in first slider next to 'JumpSpeed: 447.4076' label
        /// </summary>
        public string UIItemSliderPositionAsString9 = "112.5";
        
        /// <summary>
        /// Set position '109.38' in first slider next to 'MoveSpeed: 68.26093' label
        /// </summary>
        public string UIItemSliderPositionAsString10 = "109.38";
        
        /// <summary>
        /// Set position '481.25' in first slider next to 'MoveAcceleration: 322.5276' label
        /// </summary>
        public string UIItemSliderPositionAsString11 = "481.25";
        
        /// <summary>
        /// Set position '196.88' in first slider next to 'JumpSpeed: 113.1481' label
        /// </summary>
        public string UIItemSliderPositionAsString12 = "196.88";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIScrollerDevelopementWindow : WpfWindow
    {
        
        public UIScrollerDevelopementWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Scroller Developement Kit (SDK)";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfButton UIBrowseXMLButton
        {
            get
            {
                if ((this.mUIBrowseXMLButton == null))
                {
                    this.mUIBrowseXMLButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIBrowseXMLButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PlayerEntityBrowseButton";
                    this.mUIBrowseXMLButton.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIBrowseXMLButton;
            }
        }
        
        public UITCcompTabList UITCcompTabList
        {
            get
            {
                if ((this.mUITCcompTabList == null))
                {
                    this.mUITCcompTabList = new UITCcompTabList(this);
                }
                return this.mUITCcompTabList;
            }
        }
        
        public WpfButton UISaveXMLButton
        {
            get
            {
                if ((this.mUISaveXMLButton == null))
                {
                    this.mUISaveXMLButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveXMLButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "button2";
                    this.mUISaveXMLButton.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUISaveXMLButton;
            }
        }
        
        public WpfEdit UIPlayerEntityBrowseFiEdit
        {
            get
            {
                if ((this.mUIPlayerEntityBrowseFiEdit == null))
                {
                    this.mUIPlayerEntityBrowseFiEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPlayerEntityBrowseFiEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PlayerEntityBrowseFileTextBox";
                    this.mUIPlayerEntityBrowseFiEdit.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIPlayerEntityBrowseFiEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIBrowseXMLButton;
        
        private UITCcompTabList mUITCcompTabList;
        
        private WpfButton mUISaveXMLButton;
        
        private WpfEdit mUIPlayerEntityBrowseFiEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UITCcompTabList : WpfTabList
    {
        
        public UITCcompTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "TCcomp";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public UIMovementComponentTabPage UIMovementComponentTabPage
        {
            get
            {
                if ((this.mUIMovementComponentTabPage == null))
                {
                    this.mUIMovementComponentTabPage = new UIMovementComponentTabPage(this);
                }
                return this.mUIMovementComponentTabPage;
            }
        }
        
        public UIMovementComponentTabPage1 UIMovementComponentTabPage1
        {
            get
            {
                if ((this.mUIMovementComponentTabPage1 == null))
                {
                    this.mUIMovementComponentTabPage1 = new UIMovementComponentTabPage1(this);
                }
                return this.mUIMovementComponentTabPage1;
            }
        }
        #endregion
        
        #region Fields
        private UIMovementComponentTabPage mUIMovementComponentTabPage;
        
        private UIMovementComponentTabPage1 mUIMovementComponentTabPage1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMovementComponentTabPage : WpfTabPage
    {
        
        public UIMovementComponentTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "MovementComponent";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public UIMoveSpeed2327172Text UIMoveSpeed2327172Text
        {
            get
            {
                if ((this.mUIMoveSpeed2327172Text == null))
                {
                    this.mUIMoveSpeed2327172Text = new UIMoveSpeed2327172Text(this);
                }
                return this.mUIMoveSpeed2327172Text;
            }
        }
        
        public UIMoveAcceleration1106Text UIMoveAcceleration1106Text
        {
            get
            {
                if ((this.mUIMoveAcceleration1106Text == null))
                {
                    this.mUIMoveAcceleration1106Text = new UIMoveAcceleration1106Text(this);
                }
                return this.mUIMoveAcceleration1106Text;
            }
        }
        
        public UIJumpSpeed4318531Text UIJumpSpeed4318531Text
        {
            get
            {
                if ((this.mUIJumpSpeed4318531Text == null))
                {
                    this.mUIJumpSpeed4318531Text = new UIJumpSpeed4318531Text(this);
                }
                return this.mUIJumpSpeed4318531Text;
            }
        }
        
        public UIMoveSpeed250Text UIMoveSpeed250Text
        {
            get
            {
                if ((this.mUIMoveSpeed250Text == null))
                {
                    this.mUIMoveSpeed250Text = new UIMoveSpeed250Text(this);
                }
                return this.mUIMoveSpeed250Text;
            }
        }
        
        public UIJumpSpeed4474076Text UIJumpSpeed4474076Text
        {
            get
            {
                if ((this.mUIJumpSpeed4474076Text == null))
                {
                    this.mUIJumpSpeed4474076Text = new UIJumpSpeed4474076Text(this);
                }
                return this.mUIJumpSpeed4474076Text;
            }
        }
        #endregion
        
        #region Fields
        private UIMoveSpeed2327172Text mUIMoveSpeed2327172Text;
        
        private UIMoveAcceleration1106Text mUIMoveAcceleration1106Text;
        
        private UIJumpSpeed4318531Text mUIJumpSpeed4318531Text;
        
        private UIMoveSpeed250Text mUIMoveSpeed250Text;
        
        private UIJumpSpeed4474076Text mUIJumpSpeed4474076Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveSpeed2327172Text : WpfText
    {
        
        public UIMoveSpeed2327172Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveSpeed: 232.7172";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveAcceleration1106Text : WpfText
    {
        
        public UIMoveAcceleration1106Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveAcceleration: 1106.337";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIJumpSpeed4318531Text : WpfText
    {
        
        public UIJumpSpeed4318531Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "JumpSpeed: 431.8531";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveSpeed250Text : WpfText
    {
        
        public UIMoveSpeed250Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveSpeed: 250";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIJumpSpeed4474076Text : WpfText
    {
        
        public UIJumpSpeed4474076Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "JumpSpeed: 447.4076";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMovementComponentTabPage1 : WpfTabPage
    {
        
        public UIMovementComponentTabPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "MovementComponent";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public UIMoveSpeed9499927Text UIMoveSpeed9499927Text
        {
            get
            {
                if ((this.mUIMoveSpeed9499927Text == null))
                {
                    this.mUIMoveSpeed9499927Text = new UIMoveSpeed9499927Text(this);
                }
                return this.mUIMoveSpeed9499927Text;
            }
        }
        
        public UIMoveAcceleration1736Text UIMoveAcceleration1736Text
        {
            get
            {
                if ((this.mUIMoveAcceleration1736Text == null))
                {
                    this.mUIMoveAcceleration1736Text = new UIMoveAcceleration1736Text(this);
                }
                return this.mUIMoveAcceleration1736Text;
            }
        }
        
        public UIJumpSpeed2493841Text UIJumpSpeed2493841Text
        {
            get
            {
                if ((this.mUIJumpSpeed2493841Text == null))
                {
                    this.mUIJumpSpeed2493841Text = new UIJumpSpeed2493841Text(this);
                }
                return this.mUIJumpSpeed2493841Text;
            }
        }
        
        public UIMoveSpeed6826093Text UIMoveSpeed6826093Text
        {
            get
            {
                if ((this.mUIMoveSpeed6826093Text == null))
                {
                    this.mUIMoveSpeed6826093Text = new UIMoveSpeed6826093Text(this);
                }
                return this.mUIMoveSpeed6826093Text;
            }
        }
        
        public UIMoveAcceleration3225Text UIMoveAcceleration3225Text
        {
            get
            {
                if ((this.mUIMoveAcceleration3225Text == null))
                {
                    this.mUIMoveAcceleration3225Text = new UIMoveAcceleration3225Text(this);
                }
                return this.mUIMoveAcceleration3225Text;
            }
        }
        
        public UIJumpSpeed1131481Text UIJumpSpeed1131481Text
        {
            get
            {
                if ((this.mUIJumpSpeed1131481Text == null))
                {
                    this.mUIJumpSpeed1131481Text = new UIJumpSpeed1131481Text(this);
                }
                return this.mUIJumpSpeed1131481Text;
            }
        }
        #endregion
        
        #region Fields
        private UIMoveSpeed9499927Text mUIMoveSpeed9499927Text;
        
        private UIMoveAcceleration1736Text mUIMoveAcceleration1736Text;
        
        private UIJumpSpeed2493841Text mUIJumpSpeed2493841Text;
        
        private UIMoveSpeed6826093Text mUIMoveSpeed6826093Text;
        
        private UIMoveAcceleration3225Text mUIMoveAcceleration3225Text;
        
        private UIJumpSpeed1131481Text mUIJumpSpeed1131481Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveSpeed9499927Text : WpfText
    {
        
        public UIMoveSpeed9499927Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveSpeed: 94.99927";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveAcceleration1736Text : WpfText
    {
        
        public UIMoveAcceleration1736Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveAcceleration: 1736.938";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIJumpSpeed2493841Text : WpfText
    {
        
        public UIJumpSpeed2493841Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "JumpSpeed: 249.3841";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveSpeed6826093Text : WpfText
    {
        
        public UIMoveSpeed6826093Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveSpeed: 68.26093";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIMoveAcceleration3225Text : WpfText
    {
        
        public UIMoveAcceleration3225Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "MoveAcceleration: 322.5276";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIJumpSpeed1131481Text : WpfText
    {
        
        public UIJumpSpeed1131481Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.Name] = "JumpSpeed: 113.1481";
            this.WindowTitles.Add("Scroller Developement Kit (SDK)");
            #endregion
        }
        
        #region Properties
        public WpfSlider UIItemSlider
        {
            get
            {
                if ((this.mUIItemSlider == null))
                {
                    this.mUIItemSlider = new WpfSlider(this);
                    #region Search Criteria
                    this.mUIItemSlider.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemSlider.WindowTitles.Add("Scroller Developement Kit (SDK)");
                    #endregion
                }
                return this.mUIItemSlider;
            }
        }
        #endregion
        
        #region Fields
        private WpfSlider mUIItemSlider;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow1 UIOpenWindow1
        {
            get
            {
                if ((this.mUIOpenWindow1 == null))
                {
                    this.mUIOpenWindow1 = new UIOpenWindow1(this);
                }
                return this.mUIOpenWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIOpenWindow1 mUIOpenWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIPlayerxmlListItem UIPlayerxmlListItem
        {
            get
            {
                if ((this.mUIPlayerxmlListItem == null))
                {
                    this.mUIPlayerxmlListItem = new UIPlayerxmlListItem(this);
                }
                return this.mUIPlayerxmlListItem;
            }
        }
        
        public UITestEntityxmlListItem UITestEntityxmlListItem
        {
            get
            {
                if ((this.mUITestEntityxmlListItem == null))
                {
                    this.mUITestEntityxmlListItem = new UITestEntityxmlListItem(this);
                }
                return this.mUITestEntityxmlListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayerxmlListItem mUIPlayerxmlListItem;
        
        private UITestEntityxmlListItem mUITestEntityxmlListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIPlayerxmlListItem : WinListItem
    {
        
        public UIPlayerxmlListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Player.xml";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UITestEntityxmlListItem : WinListItem
    {
        
        public UITestEntityxmlListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestEntity.xml";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIOpenWindow1 : WinWindow
    {
        
        public UIOpenWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIDetailsPanePane UIDetailsPanePane
        {
            get
            {
                if ((this.mUIDetailsPanePane == null))
                {
                    this.mUIDetailsPanePane = new UIDetailsPanePane(this);
                }
                return this.mUIDetailsPanePane;
            }
        }
        
        public UISaveWindow UISaveWindow
        {
            get
            {
                if ((this.mUISaveWindow == null))
                {
                    this.mUISaveWindow = new UISaveWindow(this);
                }
                return this.mUISaveWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow11 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow11(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsPanePane mUIDetailsPanePane;
        
        private UISaveWindow mUISaveWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIItemWindow11 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIDetailsPanePane : WinPane
    {
        
        public UIDetailsPanePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Details Pane";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIFilenameComboBox
        {
            get
            {
                if ((this.mUIFilenameComboBox == null))
                {
                    this.mUIFilenameComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIFilenameComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "File name:";
                    this.mUIFilenameComboBox.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIFilenameComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UISaveWindow : WinWindow
    {
        
        public UISaveWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WinButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFilenameEdit
        {
            get
            {
                if ((this.mUIFilenameEdit == null))
                {
                    this.mUIFilenameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFilenameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "File name:";
                    this.mUIFilenameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIFilenameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFilenameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIItemWindow11 : WinWindow
    {
        
        public UIItemWindow11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITestEntityxmlListItem1 UITestEntityxmlListItem
        {
            get
            {
                if ((this.mUITestEntityxmlListItem == null))
                {
                    this.mUITestEntityxmlListItem = new UITestEntityxmlListItem1(this);
                }
                return this.mUITestEntityxmlListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestEntityxmlListItem1 mUITestEntityxmlListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UITestEntityxmlListItem1 : WinListItem
    {
        
        public UITestEntityxmlListItem1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestEntity.xml";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UITestEntity2xmlListItem UITestEntity2xmlListItem
        {
            get
            {
                if ((this.mUITestEntity2xmlListItem == null))
                {
                    this.mUITestEntity2xmlListItem = new UITestEntity2xmlListItem(this);
                }
                return this.mUITestEntity2xmlListItem;
            }
        }
        #endregion
        
        #region Fields
        private UITestEntity2xmlListItem mUITestEntity2xmlListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UITestEntity2xmlListItem : WinListItem
    {
        
        public UITestEntity2xmlListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "TestEntity2.xml";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UISaveAsWindow3 : WinWindow
    {
        
        public UISaveAsWindow3()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.FilterProperties[WinWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.457")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
